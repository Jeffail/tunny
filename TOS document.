Lab's series on free software developers who choose GNU licenses for their works.
</description>
<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
<![CDATA[
<p>In this edition, we conducted an email-based interview with <a href="https://fmarier.org">Fran√ßois Marier</a>, a free software developer from New Zealand. He is the lead developer of <a href="https://www.libravatar.org">Libravatar</a>. In addition to his passion for decentralization, he contributes to the Debian project and volunteers on the FSF licensing team.</p> <p>Libravatar is a free network service providing profile photos for a number of Web sites, including <a href="https://bugs.debian.org">bugs.debian.org</a> and <a href="https://git.kernel.org">git.kernel.org</a>. Its flexible <a href="https://wiki.libravatar.org/description/">architecture</a> allows end users to host their own images and allows Web sites to use Gravatar as a fallback when necessary. It is licensed under the GNU Affero General Public License version 3, or end user can opt for any later version (<a href="https://www.gnu.org/licenses/agpl-3.0.html">GNU AGPLv3+</a>).</p> <h2>What inspired you to create Libravatar?</h2> <p>As I explained in a <a href="http://mirror.linux.org.au/linux.conf.au/2011/2011-01-26-Wednesday/N515/Freeing_the_Cloud_one_service_at_a_time.ogv">talk</a> I gave at linux.conf.au in 2011, my main sources of inspiration were the <a href="http://autonomo.us/2008/07/14/franklin-street-statement/">Franklin Street Statement</a>, as well as a <a href="http://autonomo.us/2009/03/31/evan-prodromous-libreplanet-engineering-fn/">talk</a> that Evan Prodromou gave at LibrePlanet in 2009.</p> <p>I figured that we have a lot of work to do to replace all of the nonfree Web services we rely on, and so I decided that I would participate and get started with replacing the simplest Web service I could think of: the Gravatar.com avatar hosting service.</p> <h2>How are people using it?</h2> <p>The main audience for Libravatar are the developers of free Web applications. By using Libravatar over Gravatar, they are giving their users the option of either self-hosting their own avatars or using a free software service.</p> <p>There are a few <a href="https://wiki.libravatar.org/libraries/">projects</a> that use Libravatar, and in terms of traffic, our biggest users are the Debian, Fedora, Mozilla and the kernel Linux projects.</p> <h2>What features do you think really set Libravatar apart from similar software?</h2> <p>While Libravatar and Gravatar are quite similar in terms of <a href="https://wiki.libravatar.org/features/">features</a>, Libravatar distinguishes itself in the areas of federation and <a href="https://wiki.libravatar.org/running_your_own/">self-hosting</a>, as well as support for independent authentication systems. We also made it easy to delete and export your account because we believe that users should be in control of their own data.</p> <h2>Why did you choose the GNU AGPLv3+ as Libravatar's license?</h2> <p>Since my original goal was to produce a free software replacement for Gravatar, using a copyleft license was a no-brainer since it guarantees that the software will always stay free.</p> <p>While developers are free to rely on the Libravatar service in their nonfree Web applications, I wanted any self-hoster using the main codebase to be part of our community. The GNU AGPL seemed like a good way to encourage a sharing culture.</p> <h2>How can people help contribute to Libravatar?</h2> <p>Our most pressing need is growing our mirror network. If you have a small amount of disk space (&lt; 400 MB) and bandwidth (around 1GB / month) on your server, please get in touch at <a href="mailto:mirrors@libravatar.org">&#109;&#105;&#114;&#114;&#111;&#114;&#115;&#64;&#108;&#105;&#98;&#114;&#97;&#118;&#97;&#116;&#97;&#114;&#46;&#111;&#114;&#103;</a>! We are slowly becoming more and more popular and are already pretty close to capacity. Scaling a free service to keep up with increasing popularity is one of the big unsolved problems in the free software world, it seems.</p> <p>Another easy place where people can help is with <a href="https://wiki.libravatar.org/translator/">translations</a>. We currently support fourteen different languages but we are always hoping to reach more people in their native language.</p> <h2>What's the next big thing for Libravatar?</h2> <p>It's hard to point to a single big thing because the service is fairly mature now, having been around since 2010.</p> <p>Some of the things we are thinking about at the moment are: support for <a href="http://donottrack.us/">Do Not Track</a>, SVG avatars (to help with high-DPI displays), and a graphical refresh with support for mobile. <a href="https://wiki.libravatar.org/talk_to_us/">Get in touch</a> if you are good with pixels and interested in getting involved.</p>
]]>
</content:encoded>
<dc:publisher>No publisher</dc:publisher>
<dc:creator/>
<dc:rights/>
<dc:date>2015-06-01T17:20:00Z</dc:date>
<dc:type>Blog Entry</dc:type>
</item>
<item rdf:about="http://www.fsf.org/blogs/licensing/why-doesnt-the-fsf-release-gpg-signed-copies-of-its-licenses">
<title>
Why doesn't the FSF release GPG-signed copies of its licenses?
</title>
<link>
http://www.fsf.org/blogs/licensing/why-doesnt-the-fsf-release-gpg-signed-copies-of-its-licenses
</link>
<description>
While verified copies of our licenses can be useful, this is unfortunately a project that sounds straightforward at first, but all the corner cases found in the wild muck it up.
</description>
<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
<![CDATA[
<p>One relatively frequent request we receive is for the FSF to provide GPG-signed copies of our licenses. <a href="https://www.gnupg.org/">GPG</a> is a tool that lets users cryptographically sign or encrypt documents and emails. A GPG-signed document lets anyone who receives it know that they have received the exact same document as the one that was signed. By providing signed documents, users will be able to easily ensure that they have received an unmodified copy of the license along with their software. It's also possible that some system of signing the documents could help projects tracking the use and adoption of various free software licenses. Providing these signed documents is a simple task: run a command and publish the documents. A trivial investment of resources, or at least that is how it appears at first.</p> <p>The reality is that projects can comply with their duty to provide a copy of a license while also modifying the format of the license documents to meet their own needs. To our knowledge, there's no simple way to correctly identify when a document is the proper license, given that the formatting or structure of the document can vary between distributions. Many distributors even put the license at the end of a longer document or manual. If a valid copy of the license were to fail our check, resolving this issue could waste resources and lead to further problems. We don't want to cause undue grief for projects that are properly licensed under a free license, simply because they want to shift around some white space on the license, wrap the lines at different points, or store the document in a different encoding system.</p> <p>We turned to our licensing team for ideas about how to reap the same benefits with fewer false failures. Possibilities included flattening the document and removing white space before generating a hash of the document. But testing showed that some valid copies of licenses in the wild would fail this check. There doesn't seem to be a simple method that will accurately verify that the text of the document is unchanged, without constricting the ability of free software developers in how they format the document.</p> <p>The fact remains that even if users could check that a document they receive is a legitimate, unmodified copy of a GNU license, that doesn't mean that the accompanying software is free of impermissible restrictions. Additional restrictions on the software do not need to be written into the license. In fact, proprietary developers have mastered the art of using many different documents to place restrictions on their software, and the same can happen when a user receives a piece of software that purports to be under a free license. Additional restrictions could be hidden in a README file, a manual, or even a separate licensing or TOS document.</p> <p>In the end, while it would be convenient and useful to verify via command line that a document is a genuine copy of a GNU license, the problems this can cause are unfortunately more trouble than they are worth. The license, like the documentation, is among the few things distributed with software that are meant exclusively for humans to understand, not for computers to process. After
